require 'wool/annotation_parser/useful_parsers_parser'
module Wool
  module Parsers
    grammar Structural   
      include GeneralPurpose
      rule structural_constraint
        '#' method_name space* parenthesized_type_list space* '->' space* return_type:type {
          def type
            result = Types::StructuralType.new(
                method_name.text_value, parenthesized_type_list.all_types,
                return_type.type)
          end
        } / '#' method_name space* parenthesized_type_list space* return_type:type {
          def type
            result = Types::StructuralType.new(
                method_name.text_value, parenthesized_type_list.all_types,
                return_type.type)
          end
        } / '#' method_name space* parenthesized_type_list {
          def type
            result = Types::StructuralType.new(
                method_name.text_value, parenthesized_type_list.all_types, [])
          end
        } / '#' method_name space* '->' space* return_type:type {
          def type
            result = Types::StructuralType.new(
                method_name.text_value, [], return_type.type)
          end
        } / '#' method_name {
          def type
            result = Types::StructuralType.new(method_name.text_value, [], [])
          end
        }
      end
    end
  end
end