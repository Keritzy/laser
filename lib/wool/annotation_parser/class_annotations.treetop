require 'wool/annotation_parser/useful_parsers_parser'
module Wool
  module Parsers
    grammar Class   
      include GeneralPurpose
      rule hash_constraint
        variance_constraint space* "=>" space* variance_constraint {
          def constraints
            [Constraints::GenericClassConstraint.new(
                'Hash', :covariant, variance_constraint1.constraints,
                variance_constraint2.constraints)]
          end
        } / variance_constraint
      end

      rule variance_constraint
        constant "=" !'>' {
          def constraints
            constant.constraints.map { |x| x.variance = :invariant; x }
          end
        }
        /
        constant "-" {
          def constraints
            constant.constraints.map { |x| x.variance = :contravariant; x }
          end
        }
        /
        (constant) { 
          def constraints
            constant.constraints
          end 
        }
      end

      rule constant
        ( '::'? [A-Z] [A-Za-z_]* )+ {
          def constraints
            [Constraints::ClassConstraint.new(text_value, :covariant)]
          end
        }
      end
    end
  end
end